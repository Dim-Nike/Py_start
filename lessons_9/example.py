# ------TRIGGER__PY_START------

class User:
    name = ""
    surname = ""
    age = 0
    email = ""

    def __init__(self, name, surname, age, email):
        self.name = name
        self.surname = surname
        self.age = age
        self.email = email

    def set(self, name, surname, age):
        self.name = name
        self.surname = surname
        self.age = age

    def printAll(self):
        print("Пользователь:", self.name, ", его возраст:", self.age)


admin = User("Admin", "Marley", 21, "admin@itproger.com")
admin.printAll()

bob = User("Боб", "Марли", 18, "bob@test.com")
bob.printAll()

# -------HOMEWORK--------


# TODO Создание класса
#  Создайте класс Люди с конструктором и одним методом. Создайте объект этого класса и используйте метод из класса для объекта.


# TODO Конструктор
#  Создайте класс, что будет выводить сообщение: «Класс Cars был создан!».
#  Такое сообщение должно выводиться каждый раз при создании объекта (экземпляра) класса.


# TODO Работа с классом
#  Создайте класс Message.
#  В классе реализуйте метод introduce. Метод должен выводить сообщение: «Привет, меня зовут Василий»,
#  при этом «Василий» это параметр, что передается в конструктор и выводиться позже в функции.


# TODO Класс автомобиль
#  Создайте класс Автомобиль. В класс добавьте несколько полей:
#  количество колес
#  модель автомобиля
#  скорость
#  Также добавьте методы:
#  метод что получает три параметра и устанавливает их в поля класса
#  метод, который выводит информацию про объект на экран
#  Создайте два объекта и используйте оба метода для каждого из объектов.


# TODO Создание полей класса
#  Создайте пустой класс без методов и полей.
#  На основе класса создайте два объекта. Обратитесь ко второму объекту и создайте для него поле «newValue» со значением 5.


# TODO Небольшой класс
#  Создайте класс с одним текстовым полем, а также методом, что будет писать на экран значение поля + параметр переданный в него.
#  Создайте объект на основе класса и вызовите метод из класса.


# TODO Инкапсуляция
#  Создайте класс Автомобиль с такими характеристиками:
#  три поля: количество колес: модель, скорость
#  метод для установки всех значений
#  инкапсулированный метод для вывода всей информации (будет работать лишь внутри класса)
#  метод вызывающий инкапсулированный метод


# TODO Простой конструктор
#  Есть класс Car:

class Car_1:
    wheels = 4
    model = "Some"
    speed = 123.5

    def getAll(self):
        print("Транспорт ", self.model, " может ехать со скоростью ", self.speed, " на всех ", self.wheels, " колесах!")

# TODO Создайте конструктор для класса, который будет устанавливать все три значения при создании объекта.
#  Также на основе класса создайте два объекта.


