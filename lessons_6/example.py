# ------TRIGGER__PY_START------

# Анонимные функции

mult = lambda a, x=23: a * x

print(mult(2))
print(mult(3, 5))

mult = lambda *args: print(args)

mult(2, "String", False)
mult(3, 5)


# Обычные функции
def func(words):
    print("Переменная:", words)
    pass


func("Привет мир!")


def summ(a=2, b=1, x=0):
    res = a + b + x
    return res


result = summ(5, 2, 7)
print(result, summ(45, 2))


def printAll(*params):
    for i in params:
        print(i * 2)
    print("\n")


printAll(6, "Word", 7, 9.23)
printAll(8, 2)


def printDictionary(**args):
    for key, value in args.items():
        print("Ключ:", key, ", значение:", value)


printDictionary(long="Георгий", short="Гоша", x=8, some=True)

# -------HOMEWORK--------


# TODO Наибольший элемент
#  Создайте функцию, которая будет находить наибольший элемент в списке.
#  Важно: не используйте встроенные функции в Python.


# TODO Поиск слов
#  Напишите функцию, которая принимает строку и число. Эта же функция находит массив, состоящий из
#  слов, длина которых больше числа, переданного в функцию.

# TODO Округление просмотров
#  Создайте функцию, которая будет округлять четырехзначные числа, заменяя все цифры,
#  стоящие справа от разряда числа, буквой «К». Число менее тысячи будет выводиться без изменений.
# Передаем число 1272
# Получаем - 1.2К


# TODO Функция enumerate
#  Выведите список через цикл for. Для подсчета количества элементов используйте функцию enumerate.
#  Список:
list_enumerate = [34, 'sd', 56, 34.34]


# TODO Расчет результатов(Повышенная сложность)
#  Создайте функцию, которая подсчитывать расстояние, что проедет человек.
#  Функция принимает два параметра: время и скорость.
#  При выводе результат используйте функцию lambda для вывода корректной информации:
#  выводите строку: "Вы проедете: 1 километр", если результат был равен единице
#  выводите строку: "Вы проедете: цифра километров", если результат был большим за единицу


# TODO Функция внутри функции
#  Создайте две функции: newfunc и myfunc. Каждая должна принимать по одному параметру.
#  Функция newfunc должна вызывать функцию myfunc изнутри себя.
#  Результат выполнения функций - это получение суммы из двух параметров, что передаются.
#  Выведите результат передав параметры при вызове функций.


# TODO Динамические параметры функции
#  Создайте функцию, которая принимает заранее не установленное количество параметров. Выведите сумму всех переданных параметров.